Azure Storage Service

⮚ Diff types of data and requirements
  ⮚ Relational, non-relational/No-SQL, datasheets, images, videos, backups
  ⮚ Storage, access, security, availability, latency, processing, backup

⮚ Diff types of Data Service
  ⮚ Azure Blobs: Text and binary data
  ⮚ Azure Files: Managed file shares (SMB Protocol)
  ⮚ Azure Queues: Messaging
  ⮚ Azure Tables: NoSQL store

⮚ Features
  ⮚ Durable and highly available – redundancy across datacenters or regions
  ⮚ Secure – all data encrypted by default
  ⮚ Scalable – massively scalable
  ⮚ Managed - Azure handles hardware maintenance, updates, and critical issues for you.
  ⮚ Accessible - accessible from anywhere in the world over HTTP or HTTPS.
      ⮚ Clients libraries are available in all languages
      ⮚ Support scripting in PowerShell or Azure CLI



Azure Storage Redundancy

⮚ Locally redundant storage (LRS) – Three synchronous copies in same data center

⮚ Zone-redundant storage (ZRS) – Three synchronous copies in three availability zones (AZs)

⮚ Geo-redundant storage (GRS) - LRS + Asynchronous copy to secondary region (three more copies using LRS) – Read only access
  ⮚ Read-access geo-redundant storage (RA-GRS) – Read Access on GRS

⮚ Geo-zone-redundant storage (GZRS) – ZRS + Asynchronous copy to secondary region (three more copies using LRS) – Read only access
  ⮚ Read-access geo-zone-redundant storage (RA-GZRS) – Read Access on GZRS



Blob Storage

⮚ Blob - Binary Large Object
  ⮚ Any type or format
  ⮚ Text, Images, audio, video, excel, backup files

⮚ Use cases:
  ⮚ Storing files for shared access
  ⮚ Video and audio streaming
  ⮚ Storing data for analysis (Data Lake Gen2)
  ⮚ Writing to the log file
  ⮚ Storing data for disaster recovery, backup, and archiving

⮚ Flat structure

⮚ Provides a unique namespace in Azure for your data.
  ⮚ http://mystorageaccount.blob.core.windows.net



Three types of Blob Storage

⮚ Block Blobs:
  ⮚ For large objects that doesn't use random read and write operations, files that are read from beginning to end
  ⮚ Such as media files or image files for websites.

⮚ Page Blobs:
  ⮚ Optimized for random read and write operations.
  ⮚ Provide durable disks for Azure Virtual Machines (Azure VMs)

⮚ Append Blobs:
  ⮚ Optimized for append operations. e. g. Logs
  ⮚ When you modify an append blob, blocks are added to the end of the blob only
  ⮚ Updating or deleting of existing blocks is not supported
  ⮚ For example, you might write all of your trace logging to the same append blob for an application running on multiple VMs



Storage Access Tiers

⮚ Data stored in the cloud can be different based on how it's generated, processed, and accessed over its lifetime.

⮚ Pricing
  ⮚ The volume of data stored/month
  ⮚ Types of operations performed
  ⮚ Number of operations performed
  ⮚ Data transfer cost, if any
  ⮚ The selected data redundancy option

⮚ Organize your data based on attributes like frequency of access and planned retention period.

⮚ Blob access tiers
  ⮚ Hot access tier
  ⮚ Cool access tier
  ⮚ Cold access tier
  ⮚ Archive access tier


Storage Access Tiers

⮚ Hot
  ⮚ Frequently accessed data
      ⮚ Example - images for your website
  ⮚ Low latency
  ⮚ Higher access cost

⮚ Cool
  ⮚ Infrequent accessed data
      ⮚ Example - invoices for your customers
  ⮚ High latency
  ⮚ Lower cost
  ⮚ Stored for at least 30 days

⮚ Cold
  ⮚ Infrequent/Rarely accessed data
  ⮚ High latency
  ⮚ Lower storage costs and higher access costs compared to the cool tier
  ⮚ Stored for at least 90 days

⮚ Archive
  ⮚ Rarely accessed data
      ⮚ Example - long-term backups
  ⮚ Highest access times and access cost
  ⮚ Latency in hours
  ⮚ Stored for at least 180 days
  ⮚ Use Case: Business policy mandated Data Archiving, long term retention like healthcare data


Performance Tiers

Standard
⮚ Backed by magnetic drives
⮚ Support – All storage account
⮚ Optimized for high capacity and high throughput
⮚ Provides the lowest cost per GB.
⮚ Best for applications that require bulk storage or where data is accessed infrequently.
⮚ Example: Backup and DR datasets, media, pictures, videos.

Premium
⮚ Backed by solid state drives (SSD)
⮚ Good for virtual machines and workloads that need low latency and high I/O performance
⮚ Examples: transactional databases, big data analysis, IOT, AI or ML
⮚ Block Blob: Best for high transaction rates or low storage latency
⮚ File Shares: Best for enterprise or high performance applications that need to scale
⮚ Page blobs: Best for random read and write operations

Note: You cannot change performance tier after account creation



Azure Table Storage

⮚ NoSQL key-value Storage

⮚ Items are referred to as rows, and fields are known as columns

⮚ All rows in a table must have a key

⮚ No concept of relationships, stored procedures, secondary indexes, or foreign keys

⮚ To help ensure fast access, Azure Table Storage splits a table into partitions

⮚ Support very large volume of Data

⮚ Consider Cosmos DB for new development

⮚ Advantages
  ⮚ It's simpler to scale
  ⮚ A table can hold semi-structured data
  ⮚ No complex relationships
  ⮚ Data insertion and retrieval is fast

⮚ Good to use for:
  ⮚ Storing TBs of structured data capable of serving web scale applications
  ⮚ Storing datasets that don't require complex joins, foreign keys, or stored procedures, and that can be denormalized for fast access.
  ⮚ Capturing event logging and performance monitoring data.


Azure Queue Storage

⮚ Store large numbers of messages.

⮚ Access messages via authenticated calls using HTTP or HTTPS.

⮚ May contain millions of messages, up to the total capacity limit of a storage account.

⮚ Queues are commonly used to create a backlog of work to process asynchronously.


Azure File Storage

⮚ Enables you to create files shares in the cloud, and access these file shares from anywhere with an internet connection

⮚ Mounted concurrently by cloud or on-premises deployments.

⮚ Accessible from Windows, Linux, and macOS clients.

⮚ Accessible Server Message Block (SMB) protocol or Network File System (NFS) protocol

⮚ Azure Files ensures the data is encrypted at rest, and the SMB protocol ensures the data is encrypted in transit.

⮚ Use Cases
  ⮚ Replace or supplement on-premises file servers
  ⮚ Share application settings
  ⮚ Dev/Test/Debug

⮚ Key Benefits
  ⮚ Shared access: Replace on-premises file shares with Azure file shares without application compatibility issues
  ⮚ Fully managed: Azure will manage hardware or an OS
  ⮚ Resiliency: you don’t have to deal with local power and network issues.


Azure Disk Storage

⮚ VM uses disks as a place to store an operating system, applications, and data in Azure.

⮚ One virtual machine can have one OS disk and multiple Data disk but one data disk can only be link with one VM.

⮚ Both the OS disk and the data disk are virtual hard disks (VHDs) stored in an Azure storage account.

⮚ The VHDs used in Azure is .vhd files stored as page blobs in a standard or premium storage account in Azure.

⮚ Unmanaged disks: We can create a storage account and specify it when we create the disk.
    ⮚ Not recommended, previous unmanaged disks should migrate to managed disk

⮚ Managed disk
    ⮚ Azure creates and manages storage accounts in the background.
    ⮚ We don't have to worry about scalability issues.
    ⮚ Azure creates and manages the disk for us based on the size and performance tier we specify.

⮚ Managed Disk types:
    ⮚ Standard HDD: Backup, non-critical, infrequent access
    ⮚ Standard SSD: lightly used production applications or dev/test environments
    ⮚ Premium SSD disks: Super fast and high performance, very low latency, recommended for production and performance sensitive workloads
    ⮚ Ultra disks (SSD): for most demanding IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other
      transaction-heavy workloads
